/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import elemento.ConnectionFactory;
import elemento.Elemento;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author esque
 */
public class ClaveProdServ extends javax.swing.JFrame {

    ConnectionFactory factory = new ConnectionFactory();
    DefaultTableModel model;
    String claveSat;
    AddProductos ventanaActual;
    
    public ClaveProdServ() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        textoBuscar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaClaves = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        claveBuscar = new javax.swing.JTextField();
        buscarClave = new javax.swing.JButton();

        jLabel1.setText("Nombre o palabras clave:");

        textoBuscar.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                textoBuscarInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        textoBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoBuscarKeyTyped(evt);
            }
        });

        tablaClaves.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Clave SAT", "Descripcion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaClaves.getTableHeader().setReorderingAllowed(false);
        tablaClaves.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaClavesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaClaves);
        if (tablaClaves.getColumnModel().getColumnCount() > 0) {
            tablaClaves.getColumnModel().getColumn(0).setResizable(false);
            tablaClaves.getColumnModel().getColumn(0).setPreferredWidth(100);
            tablaClaves.getColumnModel().getColumn(1).setResizable(false);
            tablaClaves.getColumnModel().getColumn(1).setPreferredWidth(200);
            tablaClaves.getColumnModel().getColumn(2).setResizable(false);
            tablaClaves.getColumnModel().getColumn(2).setPreferredWidth(700);
        }

        jLabel2.setText("Clave");

        claveBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                claveBuscarKeyPressed(evt);
            }
        });

        buscarClave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/elemento/search.png"))); // NOI18N
        buscarClave.setToolTipText("Buscar Clave");
        buscarClave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarClaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 628, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(claveBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buscarClave, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textoBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(textoBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(claveBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(buscarClave)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textoBuscarInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_textoBuscarInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_textoBuscarInputMethodTextChanged

    private void tablaClavesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaClavesMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            evt.consume();
            if(model == null){
                model = (DefaultTableModel)tablaClaves.getModel();
            }
            
            int row = tablaClaves.getSelectedRow();
            claveSat = model.getValueAt(row, 1).toString();
            String id = model.getValueAt(row,0).toString();
            
            ventanaActual.setClaveSat(claveSat);
            ventanaActual.setIdClaveSat(new Integer(id));
            
            this.dispose();
        }
    }//GEN-LAST:event_tablaClavesMouseClicked

    private void textoBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoBuscarKeyTyped
        // TODO add your handling code here:
        Connection con = Elemento.odbc();
        Statement stmt = factory.stmtLectura(con);
        ResultSet rs;
        String text = textoBuscar.getText().trim();
        model = (DefaultTableModel) tablaClaves.getModel();
        model.setRowCount(0);
        String clave_sat,desc;
        Integer id;
        System.out.println(text);
        if(text.length() >= 3){
            try {
                rs = stmt.executeQuery("SELECT * FROM c_claveprodserv WHERE descripcion like '%"+text+"%' "
                        + "OR palabras_similares like '%"+text+"%'");
                while(rs.next()){
                    id = rs.getInt("c_claveprodserv_id");
                    clave_sat = rs.getString("claveprodserv");
                    desc = rs.getString("descripcion");
                    
                    Object row [] = {id,clave_sat,desc};
                    model.addRow(row);
                }
                
                rs.close();
                stmt.close();
                con.close();
            } catch (SQLException e) {
                e.printStackTrace();
                try {
                    stmt.close();
                    con.close();
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
                Elemento.log.error("Error al obtener el catalogo de las claves de productos y servicios: ",e);
            }
        }
    }//GEN-LAST:event_textoBuscarKeyTyped

    private void buscarClaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarClaveActionPerformed
        // TODO add your handling code here:
        buscarPorClave();
    }//GEN-LAST:event_buscarClaveActionPerformed

    private void claveBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_claveBuscarKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            buscarPorClave();
        }
    }//GEN-LAST:event_claveBuscarKeyPressed
    
    private void buscarPorClave(){
        textoBuscar.setText("");
        Connection con = factory.crearCon();
        Statement stmt = factory.stmtLectura(con);
        ResultSet rs;
        int id;
        String clave_sat, desc;
        model = (DefaultTableModel) tablaClaves.getModel();
        model.setRowCount(0);
        
        try {
            rs = stmt.executeQuery("SELECT * FROM c_claveprodserv WHERE claveprodserv = '" + claveBuscar.getText().trim() + "'");
            if(rs.next()){
                id = rs.getInt("c_claveprodserv_id");
                clave_sat = rs.getString("claveprodserv");
                desc = rs.getString("descripcion");

                Object row [] = {id,clave_sat,desc};
                model.addRow(row);
            }else{
                JOptionPane.showMessageDialog(null, "No se encontró ninguna clave", "Advertencia", JOptionPane.WARNING_MESSAGE);
            }
        } catch (HeadlessException | SQLException e) {
            e.printStackTrace();
            Elemento.log.error("Excepcion al consultar una clave de producto: ", e);
            JOptionPane.showMessageDialog(null, "Ocurrió un error al buscar: " + e.getMessage() , "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void setVentanaActual(AddProductos ventanaActual){
        this.ventanaActual = ventanaActual;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClaveProdServ.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClaveProdServ.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClaveProdServ.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClaveProdServ.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClaveProdServ().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscarClave;
    private javax.swing.JTextField claveBuscar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaClaves;
    private javax.swing.JTextField textoBuscar;
    // End of variables declaration//GEN-END:variables
}
