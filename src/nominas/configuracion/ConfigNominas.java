/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package nominas.configuracion;

import elemento.Elemento;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import nominas.Aguinaldo;
import nominas.NominaGeneral;
import utils.ConnectionFactory;

/**
 *
 * @author Abe
 */
public class ConfigNominas extends javax.swing.JFrame {

    List<String> nombres;
    List<String> numeros;
    List<Integer> idEmpleados;
    int posEmpleado;
    int idEmisor;
    ConnectionFactory factory = new ConnectionFactory(Elemento.log);
    DefaultTableModel model;
    
    public ConfigNominas() {
        initComponents();
        this.setLocationRelativeTo(null);
        //Ponemos el ancho a las columnas de la tabla de empleados
        int anchoNumero = 150;
        int [] anchos = {anchoNumero,tablaEmpleados.getWidth()-anchoNumero};
        for (int i = 0; i < tablaEmpleados.getColumnCount(); i++) {
            tablaEmpleados.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
        }
        model = (DefaultTableModel)tablaEmpleados.getModel();
        nombres = new ArrayList();
        numeros = new ArrayList();
        idEmpleados = new ArrayList();
        consultarEmisores();
        this.setVisible(true);
    }
    
    private void consultarEmisores(){
        Connection con = Elemento.odbc();
        Statement stmt = factory.stmtLectura(con);
        ResultSet rs;
        try {
            listaEmisores.removeAllItems();
            rs = stmt.executeQuery("SELECT id,nombre FROM Emisores WHERE emiteNominas = " + Boolean.TRUE);
            while(rs.next()){
                String dato = rs.getInt("id")+","+rs.getString("nombre");
                listaEmisores.addItem(dato);
            }
            stmt.close();
            con.close();
        } catch (SQLException e) {
            e.printStackTrace();
            Elemento.log.error("Excepcion al consultar los emisores desde la seccion Nominas",e);
        }
    }

    public void consultarEmpleados(){
        Connection con = Elemento.odbc();
        Statement stmt = factory.stmtLectura(con);
        Statement stmt2 = factory.stmtLectura(con);
        ResultSet rs;
        ResultSet rs2;
        Object[] row;
        String num;
        String nom;
        int idEmpleado;
        model.setRowCount(0);
        numeros.clear();
        nombres.clear();
        idEmpleados.clear();
        
        try {
            rs = stmt.executeQuery("SELECT id, nombre FROM EmpleadosRec WHERE idEmisor = "+idEmisor);
            while(rs.next()){
                row = new Object[2];
                idEmpleado = rs.getInt("id");
                
                rs2 = stmt2.executeQuery("SELECT numEmpleado FROM Empleados WHERE idEmpleado="+idEmpleado);
                if(rs2.next()){
                    nom = rs.getString("nombre");
                    num = rs2.getString("numEmpleado");
                    numeros.add(num);
                    nombres.add(nom);
                    idEmpleados.add(idEmpleado);
                    row[0] = num;
                    row[1] = nom;
                    model.addRow(row);
                }
            }
            stmt.close();
            stmt2.close();
            con.close();
        } catch (SQLException e) {
            e.printStackTrace();
            Elemento.log.error("Excepcion al consultar los empleados:",e);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        clavesPercepciones = new javax.swing.JButton();
        clavesDeducciones = new javax.swing.JButton();
        agregarEmpleado = new javax.swing.JButton();
        verEmpleado = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        numeroBusqueda = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        nombreBusqueda = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaEmpleados = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        listaEmisores = new javax.swing.JComboBox();
        generarNomina = new javax.swing.JButton();
        all = new javax.swing.JButton();
        aguinaldoBoton = new javax.swing.JButton();
        actualizar = new javax.swing.JButton();
        clavesOP = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Configuracion de Nomina");
        setResizable(false);

        clavesPercepciones.setText("Claves Percep.");
        clavesPercepciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clavesPercepcionesActionPerformed(evt);
            }
        });

        clavesDeducciones.setText("Claves Deduc.");
        clavesDeducciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clavesDeduccionesActionPerformed(evt);
            }
        });

        agregarEmpleado.setText("Agregar Empleado");
        agregarEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarEmpleadoActionPerformed(evt);
            }
        });

        verEmpleado.setText("Ver Empleado");
        verEmpleado.setEnabled(false);
        verEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verEmpleadoActionPerformed(evt);
            }
        });

        jLabel1.setText("Numero");

        numeroBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                numeroBusquedaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numeroBusquedaKeyTyped(evt);
            }
        });

        jLabel2.setText("Nombre");

        jLabel3.setText("Empleados");

        nombreBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nombreBusquedaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nombreBusquedaKeyTyped(evt);
            }
        });

        tablaEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaEmpleados.getTableHeader().setResizingAllowed(false);
        tablaEmpleados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaEmpleadosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaEmpleados);

        jLabel24.setText("Emisor");

        listaEmisores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaEmisoresMouseClicked(evt);
            }
        });
        listaEmisores.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                listaEmisoresItemStateChanged(evt);
            }
        });
        listaEmisores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaEmisoresActionPerformed(evt);
            }
        });

        generarNomina.setText("Generar Nomina");
        generarNomina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarNominaActionPerformed(evt);
            }
        });

        all.setText("Seleccionar Todos");
        all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allActionPerformed(evt);
            }
        });

        aguinaldoBoton.setText("Aguinaldo");
        aguinaldoBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aguinaldoBotonActionPerformed(evt);
            }
        });

        actualizar.setText("Actualizar");
        actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarActionPerformed(evt);
            }
        });

        clavesOP.setText("Claves OP");
        clavesOP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clavesOPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(numeroBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nombreBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(agregarEmpleado)
                                .addGap(18, 18, 18)
                                .addComponent(verEmpleado)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel24)
                        .addGap(18, 18, 18)
                        .addComponent(listaEmisores, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(clavesOP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clavesPercepciones)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clavesDeducciones))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(generarNomina)
                        .addGap(18, 18, 18)
                        .addComponent(aguinaldoBoton)
                        .addGap(146, 146, 146)
                        .addComponent(actualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(all)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 742, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(clavesPercepciones)
                        .addComponent(clavesDeducciones)
                        .addComponent(clavesOP))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel24)
                        .addComponent(listaEmisores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(numeroBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(nombreBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(agregarEmpleado)
                    .addComponent(verEmpleado))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(generarNomina)
                    .addComponent(all)
                    .addComponent(aguinaldoBoton)
                    .addComponent(actualizar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nombreBusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreBusquedaKeyTyped
        // TODO add your handling code here:
        
    }//GEN-LAST:event_nombreBusquedaKeyTyped

    private void numeroBusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroBusquedaKeyTyped
        // TODO add your handling code here:
        
    }//GEN-LAST:event_numeroBusquedaKeyTyped

    private void nombreBusquedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreBusquedaKeyPressed
        // TODO add your handling code here:
        Object[] row;
        String texto;
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            texto = nombreBusqueda.getText().trim();
            if(!texto.isEmpty()){
                model.setRowCount(0);
                for (int i = 0; i < nombres.size(); i++) {
                    row = new Object[2];
                    if(nombres.get(i).toUpperCase().startsWith(nombreBusqueda.getText().toUpperCase())){
                        row[0] = numeros.get(i);
                        row[1] = nombres.get(i);
                        model.addRow(row);
                    }
                }
            }else{
                model.setRowCount(0);
                for (int i = 0; i < nombres.size(); i++) {
                    row = new Object[2];
                    row[0] = numeros.get(i);
                    row[1] = nombres.get(i);
                    model.addRow(row);
                }
            }
        }
    }//GEN-LAST:event_nombreBusquedaKeyPressed

    private void numeroBusquedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroBusquedaKeyPressed
        // TODO add your handling code here:
        Object[] row;
        String texto;
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){          
            texto = numeroBusqueda.getText().trim();
            if(!texto.isEmpty()){
                if(isNumeric(texto)){
                    model.setRowCount(0);
                    for (int i = 0; i < numeros.size(); i++) {
                        row = new Object[2];
                        if(numeros.get(i).equals(texto)){
                            row[0] = numeros.get(i);
                            row[1] = nombres.get(i);
                            model.addRow(row);
                        }
                    }
                }else{
                    evt.consume();
                    JOptionPane.showMessageDialog(null, "Solo puede usar caracteres numericos");
                }
            }else{
                model.setRowCount(0);
                for (int i = 0; i < numeros.size(); i++) {
                    row = new Object[2];
                    row[0] = numeros.get(i);
                    row[1] = nombres.get(i);
                    model.addRow(row);
                }
            }
        }
    }//GEN-LAST:event_numeroBusquedaKeyPressed

    private void tablaEmpleadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaEmpleadosMouseClicked
        // TODO add your handling code here:
        verEmpleado.setEnabled(true);
        int row = tablaEmpleados.getSelectedRow();
        String num = model.getValueAt(row, 0).toString();
        posEmpleado = numeros.indexOf(num);
    }//GEN-LAST:event_tablaEmpleadosMouseClicked

    private void verEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verEmpleadoActionPerformed
        // TODO add your handling code here:
        EmpleadoUpdate emp = new EmpleadoUpdate(""+idEmpleados.get(posEmpleado),this);
        emp.setVisible(true);
    }//GEN-LAST:event_verEmpleadoActionPerformed

    private void agregarEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarEmpleadoActionPerformed
        // TODO add your handling code here:
        EmpleadoAdd emp = new EmpleadoAdd(this);
        emp.setVisible(true);
    }//GEN-LAST:event_agregarEmpleadoActionPerformed

    private void clavesPercepcionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clavesPercepcionesActionPerformed
        // TODO add your handling code here:
        ConceptosPercepciones per = new ConceptosPercepciones();
        per.setVisible(true);
    }//GEN-LAST:event_clavesPercepcionesActionPerformed

    private void clavesDeduccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clavesDeduccionesActionPerformed
        // TODO add your handling code here:
        ConceptosDeducciones dec = new ConceptosDeducciones();
        dec.setVisible(true);
    }//GEN-LAST:event_clavesDeduccionesActionPerformed

    private void listaEmisoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaEmisoresMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_listaEmisoresMouseClicked

    private void listaEmisoresItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_listaEmisoresItemStateChanged
        // TODO add your handling code here:
        idEmisor = new Integer(listaEmisores.getSelectedItem().toString().split(",")[0]);
    }//GEN-LAST:event_listaEmisoresItemStateChanged

    private void listaEmisoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaEmisoresActionPerformed
        // TODO add your handling code here:
        idEmisor = new Integer(listaEmisores.getSelectedItem().toString().split(",")[0]);
        this.consultarEmpleados();
    }//GEN-LAST:event_listaEmisoresActionPerformed

    private void generarNominaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarNominaActionPerformed
        // TODO add your handling code here:
        List<String> numEmpleados = new ArrayList();
        List<Integer> ids = new ArrayList();
        if(tablaEmpleados.getSelectedRowCount() < 1){
            JOptionPane.showMessageDialog(null, "Debe seleccionar al menos 1 empleado");
        }else{
            for(int row : tablaEmpleados.getSelectedRows()){
                numEmpleados.add(model.getValueAt(row, 0).toString());
                ids.add(idEmpleados.get(row));
            }
            new NominaGeneral(numEmpleados,idEmisor,ids).setVisible(true);
        }
    }//GEN-LAST:event_generarNominaActionPerformed

    private void allActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allActionPerformed
        // TODO add your handling code here:
        tablaEmpleados.selectAll();
    }//GEN-LAST:event_allActionPerformed

    private void actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarActionPerformed
        // TODO add your handling code here:
        this.consultarEmpleados();
    }//GEN-LAST:event_actualizarActionPerformed

    private void aguinaldoBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aguinaldoBotonActionPerformed
        List<String> numEmpleados = new ArrayList();
        List<Integer> ids = new ArrayList();
        if(tablaEmpleados.getSelectedRowCount() < 1){
            JOptionPane.showMessageDialog(null, "Debe seleccionar al menos un empleado");
        }else{
            for(int row : tablaEmpleados.getSelectedRows()){
                numEmpleados.add(model.getValueAt(row, 0).toString());
                ids.add(idEmpleados.get(row));
            }
            new Aguinaldo(numEmpleados,idEmisor,ids).setVisible(true);
        }
    }//GEN-LAST:event_aguinaldoBotonActionPerformed

    private void clavesOPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clavesOPActionPerformed
        ConceptosOtrosPagos cop = new ConceptosOtrosPagos();
        cop.setVisible(true);
    }//GEN-LAST:event_clavesOPActionPerformed

    private boolean isNumeric(String cadena){
	try {
            Integer.parseInt(cadena);
            return true;
	} catch (NumberFormatException nfe){
            return false;
	}
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Windows look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Windows (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConfigNominas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConfigNominas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConfigNominas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConfigNominas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConfigNominas().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizar;
    private javax.swing.JButton agregarEmpleado;
    private javax.swing.JButton aguinaldoBoton;
    private javax.swing.JButton all;
    private javax.swing.JButton clavesDeducciones;
    private javax.swing.JButton clavesOP;
    private javax.swing.JButton clavesPercepciones;
    private javax.swing.JButton generarNomina;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JComboBox listaEmisores;
    private javax.swing.JTextField nombreBusqueda;
    private javax.swing.JTextField numeroBusqueda;
    private javax.swing.JTable tablaEmpleados;
    private javax.swing.JButton verEmpleado;
    // End of variables declaration//GEN-END:variables
}
